This Node Express server will serve as a RESTful API for the Local History Archives.
Will accept incoming requests from the client application and serve data as needed.
Full CRUD features will only be available to admins.

7/24
Create A model for the news papers and upload your first news paper.
- Things to consider:
    How to I specicfy that I want Newspaper documents in the GrossePointeNews collection to go in the Newspaper collection under the Local History Archives collection?
    See tree in MongoDB

    Is it possible to put a pdf in a request or will it need to be hosted somewhere else?


^Resolution: Since the PDF files are already hosted on the webserver, you only need to add the url to the pdf as part of the document data.
    Secondly, the collection is specified as the third argument in the model creation.


7/24
GP news route has the needed functionalities for incoming requests: POST(create), GET (read), PUT(update), DELETE(delete) [CRUD]
Need to build these functionalities for the other outlets.

Do I specify where documents go in the model? Or do I have to instantiate multiple DB connections? Probably the former. Research needed.


7/30
Add publish year as a field value for some collections. Need to be able to fetch data by a field besides ID.
    -Create endpoints for getting data by year.
        - For GP mag (and gp civic, gp heritage), add month and year fields.
        - For GP news (and gp review), add month, year and day fields

Begin work on the front end App.


7/31
Updated models and routes to accomodate the above schema changes.
Tested a newspaper model with the changes and results were successful.

Next:
Test the other routes to verify that requests come in with the new schema changes.
Create react app and begin crafing the now archives site. Refer to diagram and notes for design.


8/2

Find out why home component is not rendring (resolved [needed outlet in parent route (Navigation)])

Attempt to make a call to the API end point to retrive grosse pointe news data. (success)
    -   Remember to modify CORS policy before deployment


Create Table component for loading mapped values
When we go to gpnews in React, we put the user in 2024 by default.
When a user goes to a year page within gpnews, a get request is sent to the gpnews backend end-point.
This request contains a single argument that is the year.
mongoose will filter and return gpnews publications from the requested year.



Create a context for grosse pointe news (and eventually, each publication to fetch and store the issues). Avoid having to drill down props

For now, you can fetch the data from the backend in the context.
Ideally you should create functionality for talking to the backend in the utils folder and make async calls to server functions in the context's useEffect.

8/4
In gp_news routes, added a new route to handle a query 
where publications from a certain year are requested