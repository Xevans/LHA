This Node Express server will serve as a RESTful API for the Local History Archives.
Will accept incoming requests from the client application and serve data as needed.
Full CRUD features will only be available to admins.

7/24
Create A model for the news papers and upload your first news paper.
- Things to consider:
    How to I specicfy that I want Newspaper documents in the GrossePointeNews collection to go in the Newspaper collection under the Local History Archives collection?
    See tree in MongoDB

    Is it possible to put a pdf in a request or will it need to be hosted somewhere else?


^Resolution: Since the PDF files are already hosted on the webserver, you only need to add the url to the pdf as part of the document data.
    Secondly, the collection is specified as the third argument in the model creation.


7/24
GP news route has the needed functionalities for incoming requests: POST(create), GET (read), PUT(update), DELETE(delete) [CRUD]
Need to build these functionalities for the other outlets.

Do I specify where documents go in the model? Or do I have to instantiate multiple DB connections? Probably the former. Research needed.


7/30
Add publish year as a field value for some collections. Need to be able to fetch data by a field besides ID.
    -Create endpoints for getting data by year.
        - For GP mag (and gp civic, gp heritage), add month and year fields.
        - For GP news (and gp review), add month, year and day fields

Begin work on the front end App.


7/31
Updated models and routes to accomodate the above schema changes.
Tested a newspaper model with the changes and results were successful.

Next:
Test the other routes to verify that requests come in with the new schema changes.
Create react app and begin crafing the now archives site. Refer to diagram and notes for design.


8/2

Find out why home component is not rendring (resolved [needed outlet in parent route (Navigation)])

Attempt to make a call to the API end point to retrive grosse pointe news data. (success)
    -   Remember to modify CORS policy before deployment


Create Table component for loading mapped values
When we go to gpnews in React, we put the user in 2024 by default.
When a user goes to a year page within gpnews, a get request is sent to the gpnews backend end-point.
This request contains a single argument that is the year.
mongoose will filter and return gpnews publications from the requested year.



Create a context for grosse pointe news (and eventually, each publication to fetch and store the issues). Avoid having to drill down props

For now, you can fetch the data from the backend in the context.
Ideally you should create functionality for talking to the backend in the utils folder and make async calls to server functions in the context's useEffect.

8/4
In gp_news routes, added a new route to handle a query 
where publications from a certain year are requested

-A context called publisher will be added.
    This context will help the offcanvas navigation component determine what to show as far as years and ranges
    A state value in publisher context called currentPublisher will default to empty string.
    currentPublisher will be updated when the route of a publisher is mounted.
        (e.g.) I navigate to grosse pointe news. The gpnews route component runs and accesses currentPublisher. Ultimately switching the context to gpnews.
        This will tell observer components like offcanvas navigation to read the fetched data and render the year ranges.


8/7
Remark
Had some trouble accessing the publisher context once it was created. I forgot to wrap the provider around the App in the Index.js files
The components wrapped inside a provider will have access to the contexts they provide.
So by wrapping it around App, all child components get access too.
----
Task
Need to have the side navigation show a list of year ranges.
This can either be hard coded or determinant.
------
Task
So when you go to gpnews home, you get a landing page for gpnews
the publisher state is set to gpnews
the newspaper context is set to an empty string.
when the user accesses the nav and clicks a year

The newspaper context's 'year' state changes to the requested year (e.g. currentYear = 2001)
When a useEffect in gpnews detects a change in the 'year' state value, it will fetch the relevant publications
from the backend by creating a concatenated query.

When the state of 'year' in newspaper context is not and empty string
the table will be rendered.
-----

8/8
Do writeup of how side nav works.

Consideration:
    - side nav currently renders the latest year and decade based on what the current year is
        what if the outlet bacomes discontinued?
        Instead of conditionally rendering by current date, render based on available data instead.
        Render based on the year of the latest issue from the outlet
------
Update:
SideNavigation component uses a switch case to determine which parent component to render within the nav
Grosse Pointe news side bar is more or less finished.
Each link updates the currentYear state in the newspaper context.

Task:
- Need to test clicking on year links in sideNavigation for grosse pointe news.
    Clicking on a link should update the newspaper context
    causing the useEffect in the gpnews route (listening to current year)
    to send an updated get request with the current year in its query.
        This should return and render the data in the table.

- Will need to add more publications to DB
- Will need to enclose fetch in a try catch block (to avoid crash [do this for all outgoing requests]).
- Will need to set fetched data into state array instead of test data